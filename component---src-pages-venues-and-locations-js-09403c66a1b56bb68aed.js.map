{"version":3,"sources":["webpack:///./src/pages/venues-and-locations.js"],"names":["VenuesAndLocations","state","showBio","showGallery","bioItemName","galleryItemName","page","title","keywords","description","items","data","floor14th-hotel","graphAlias","tsakhkadzor-complex","philarmonic-orchestra","ararat-hotel","openReadMore","_this","setState","openGallery","handleBioClose","handleGalleryClose","findThumbnail","slug","thumbnails","props","edges","length","i","node","name","childImageSharp","fluid","renderGalleryImages","this","map","item","index","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","key","className","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","renderGalleryModal","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_9___default","show","onHide","Header","closeButton","Title","Body","id","renderBioModal","_this$state","dangerouslySetInnerHTML","__html","biographies","renderItems","_this2","_components_grid_item__WEBPACK_IMPORTED_MODULE_6__","thumbnailFluid","onReadMoreClick","bind","onSeePhotosClick","render","_this$page","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_jumbotron__WEBPACK_IMPORTED_MODULE_7__","_components_grid_layout__WEBPACK_IMPORTED_MODULE_8__","Component","query"],"mappings":"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","file":"component---src-pages-venues-and-locations-js-09403c66a1b56bb68aed.js","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport GridItem from '../components/grid-item';\nimport Jumbotron from '../components/jumbotron';\nimport GridLayout from '../components/grid-layout';\nimport Modal from 'react-bootstrap/Modal';\nimport biographies from '../data/biographies';\n\nclass VenuesAndLocations extends Component {\n  state = {\n    showBio: false,\n    showGallery: false,\n    bioItemName: 'floor14th-hotel',\n    galleryItemName: 'floor14th-hotel',\n  };\n\n  page = {\n    title: 'Venues and Locations',\n    keywords: [`tango`, `#ArmTangoFest2019`, `hotels`],\n    description: `\n      Milonga, workshop and tour venues and locations.\n    `,\n  };\n\n  items = [\n    'floor14th-hotel',\n    'tsakhkadzor-complex',\n    'philarmonic-orchestra',\n    'ararat-hotel',\n  ];\n\n  data = {\n    'floor14th-hotel': {\n      title: '14th Floor Hotel',\n      graphAlias: 'floor14thHotel',\n      description: `\n        Featuring a roof terrace with views of Mount Ararat, this hotel is in the center of Yerevan, just 92 m from Republic Square. Guests enjoy free Wi-Fi and free parking.\n      `,\n    },\n    'tsakhkadzor-complex': {\n      title: 'Tsakhkadzor Sport Complex',\n      graphAlias: 'tsakhkadzorComplex',\n      description: `\n        Located on the south-west slope of Mount Teghenis,\n        this hotel offers a sports center with Olympic-size pool, and rooms with a view of the forest or valley.\n      `,\n    },\n    'philarmonic-orchestra': {\n      title: 'Armenian National Philharmonic Orchestra',\n      graphAlias: 'philarmonicOrchestra',\n      description: `\n        The Armenian National Philharmonic Orchestra (ANPO) was founded in 1925 by Arshak Adamyan and Alexander Spendiaryan.\n        For many years it has been considered as one of the leading orchestras of the former Soviet Union.\n      `,\n    },\n    'ararat-hotel': {\n      title: 'Ararat Hotel',\n      graphAlias: 'araratHotel',\n      description: `\n        Ararat Hotel is not just a hotel, itâ€™s a complex providing a wide range of hotel services as well as other attractive ways of rest and relaxation.\n      `,\n    },\n  };\n\n  openReadMore = (bioItemName) => {\n    this.setState({\n      showBio: true,\n      bioItemName,\n    });\n  };\n\n  openGallery = (galleryItemName) => {\n    this.setState({\n      showGallery: true,\n      galleryItemName,\n    });\n  };\n\n  handleBioClose = () => {\n    this.setState({\n      showBio: false,\n    });\n  };\n\n  handleGalleryClose = () => {\n    this.setState({\n      showGallery: false,\n    });\n  };\n\n  findThumbnail = (slug) => {\n    const thumbnails = this.props.data.thumbnails.edges;\n    const length = thumbnails.length;\n\n    for (let i = 0; i < length; i += 1) {\n      if (thumbnails[i].node.name === slug) {\n        return thumbnails[i].node.childImageSharp.fluid;\n      }\n    }\n\n    return false;\n  };\n\n  renderGalleryImages() {\n    const { galleryItemName } = this.state;\n    const { graphAlias } = this.data[galleryItemName];\n    const images = this.props.data[`${graphAlias}Slides`].edges;\n\n    const map = (item, index) => {\n      return (\n        <div key={index} className=\"mb-3 pics animation all 2\">\n          <Img className=\"img-fluid\" fluid={item.node.childImageSharp.fluid} />\n        </div>\n      );\n    };\n\n    return images.map(map);\n  }\n\n  renderGalleryModal() {\n    const { showGallery } = this.state;\n\n    return (\n      <Modal show={showGallery} onHide={this.handleGalleryClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Gallery</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"gallery\" id=\"gallery\">\n            {this.renderGalleryImages()}\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n  renderBioModal() {\n    const { showBio, bioItemName } = this.state;\n\n    return (\n      <Modal show={showBio} onHide={this.handleBioClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Biography</Modal.Title>\n        </Modal.Header>\n        <Modal.Body dangerouslySetInnerHTML={{ __html: biographies[bioItemName] }} />\n      </Modal>\n    );\n  }\n\n  renderItems() {\n    const map = (slug, index) => {\n      const item = this.data[slug];\n      const {\n        title,\n        description,\n      } = item;\n\n      return (\n        <GridItem\n          key={index}\n          slug={slug}\n          title={title}\n          description={description}\n          thumbnailFluid={this.findThumbnail(slug)}\n          onReadMoreClick={this.openReadMore.bind(this, slug)}\n          onSeePhotosClick={this.openGallery.bind(this, slug)}\n        />\n      );\n    };\n\n    return this.items.map(map);\n  }\n\n  render() {\n    const { title, description, keywords } = this.page;\n    const { data } = this.props;\n\n    return (\n      <Layout>\n        <SEO\n          title={title}\n          keywords={keywords}\n        />\n        <Jumbotron title={title} description={description} />\n        <GridLayout>\n          {this.renderItems()}\n        </GridLayout>\n        {this.renderBioModal()}\n        {this.renderGalleryModal()}\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query VenuesAndLocationsQuery {\n    thumbnails: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"thumbnails/venues\" }\n      }\n    ) {\n      edges {\n        node {\n          ...thumbnail\n          name\n        }\n      }\n    }\n    floor14thHotelSlides: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"slides/floor14th-hotel\" }\n      }\n    ) {\n      edges {\n        node {\n          ...galleryImage\n        }\n      }\n    }\n    tsakhkadzorComplexSlides: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"slides/tsakhkadzor-complex\" }\n      }\n    ) {\n      edges {\n        node {\n          ...galleryImage\n        }\n      }\n    }\n    philarmonicOrchestraSlides: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"slides/philarmonic-orchestra\" }\n      }\n    ) {\n      edges {\n        node {\n          ...galleryImage\n        }\n      }\n    }\n    araratHotelSlides: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        relativeDirectory: { eq: \"slides/ararat-hotel\" }\n      }\n    ) {\n      edges {\n        node {\n          ...galleryImage\n        }\n      }\n    }\n  }\n`;\n\nexport default VenuesAndLocations;\n"],"sourceRoot":""}